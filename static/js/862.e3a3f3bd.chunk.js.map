{"version":3,"file":"static/js/862.e3a3f3bd.chunk.js","mappings":"iOAIaA,EAAmBC,EAAAA,GAAW,CACzCC,OAAQD,EAAAA,KAAaE,WACrBC,MAAOH,EAAAA,KAAaE,WAAWE,IAAI,K,iDC4ErC,EA3EkB,SAAH,GAAsC,IAAjCC,EAAM,EAANA,OAAQC,EAAU,EAAVA,WAAYC,EAAM,EAANA,OAEtC,GACiGC,EAAAA,EAAAA,MADhBC,GAAnE,EAANC,OAAkB,EAAVC,WAAoB,EAAPC,QAAgB,EAAPC,QAAc,EAALC,MAAmB,EAAZC,aAAyB,EAAXC,YAAyB,EAAZP,cAAcQ,EAAY,EAAZA,aAC/CC,GAA/B,EAAfC,gBAAiC,EAAhBpB,iBAA2B,EAATqB,UAAoB,EAATF,WAI1CG,GAJkE,EAAbC,cAAqB,EAANC,OAAkB,EAAVC,WAI/D,yCAAG,6FACL,OAAff,IAAe,SACUQ,IAAe,KAAD,EAAjCQ,EAAU,QACVC,EAAaC,OAAOC,KAAKH,IAChBI,OAAS,IAEnB,QADGC,EAAMC,SAASC,iBAAiB,UAAD,OAAWN,EAAW,GAAE,OAAM,UAChE,IAAHI,GAAAA,EAAKG,SACN,2CACF,kBARkB,oCAuBnB,OACE,SAAC,WAAc,WACb,iBAAMC,SAAW7B,EAAO6B,SAAU,UAChC,sBAAUC,SAAW7B,EAAY,WAE/B,gBAAK8B,UAAU,MAAK,UAClB,gBAAKA,UAAU,mBAAkB,UAC/B,SAAC,IAAe,CAACC,MAAM,SACrBC,KAAK,SACLC,KAAK,OACLC,YAAY,gBAKlB,gBAAKJ,UAAU,MAAK,UAClB,gBAAKA,UAAU,mBAAkB,UAC/B,SAAC,IAAc,CAACC,MAAM,QACpBC,KAAK,QACLC,KAAK,OACLC,YAAY,aACZC,KAAK,WAKX,iBAAKL,UAAU,8BAA6B,WAC1C,iBAAKA,UAAU,QAAO,WACpB,mBAAQA,UAAU,8BAA8BM,QAAUrB,EAAgBkB,KAAK,SAC7EJ,SAAW7B,EAAY,SAAGA,EAAa,aAAe,YACxD,mBAAQiC,KAAK,SAASH,UAAU,sBAAsBM,QA3CzC,WACvBxB,EAAU,CACRR,OAAQ,CACNT,OAAQ,GACRE,MAAO,KAGb,EAoC8F,uBAEpF,gBAAKiC,UAAU,QAAO,UACpB,mBAAQG,KAAK,SAASH,UAAU,wBAAwBM,QArChD,WAClBnC,GACF,EAmC2F,+BAU7F,E,8BCtEaoC,EAAW,WACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAGjB,GAAkCC,EAAAA,EAAAA,WAAS,GAAM,eAA1CC,EAAS,KAAEC,EAAY,KA6BxBC,EAAgB,WACpBP,EAAS,CACPQ,SAAU,UACVC,OAAQP,EAASO,QAErB,EAEA,OACE,4BACE,gBAAKjB,UAAU,4DAA2D,4BAG1E,0BACE,SAAC,KAAM,CACLkB,cAzCa,CACnBrD,OAAQ,KACRE,MAAO,IAwCDJ,iBAAoBA,EACpBmC,SAtCgB,SAACqB,GACvBL,GAAa,GACb,IAAIM,GAAQ,QACVC,MAAM,IAAIC,MAAOC,WACdJ,IAELK,EAAAA,EAAAA,IAAU,aAAcJ,GAAUK,MAChC,SAACC,GACoB,MAAfA,EAAIC,SACNb,GAAa,GACbN,EAAS,CACPQ,SAAU,UACVC,OAAQP,EAASO,SAGvB,IACAW,OAAM,SAACC,GACPC,QAAQC,IAAIF,EACd,GAEF,EAkBqC,SAE3B,SAAC5D,GACC,OAAO,SAAC,EAAS,CAACA,OAASA,EAASC,WAAa2C,EAAY1C,OAAS4C,GACxE,QAMZ,EAEA,G","sources":["core/new/validation-schema.js","core/new/NewQuoteForm.js","core/new/NewQuote.js"],"sourcesContent":["import * as Yup from 'yup';\n\n\n\nexport const validationSchema = Yup.object({\n  author: Yup.string().required(),\n  quote: Yup.string().required().min(3)\n});","/* eslint-disable no-unused-vars */\nimport React, { useEffect, useReducer, useState, useContext, useMemo, useCallback } from 'react';\nimport { useFormikContext } from 'formik';\nimport FormikTextInput from \"../../shared/form/input/SimpleInput\";\nimport FormikTextArea from \"../../shared/form/text-box/Textarea\";\n\n\nconst QuoteForm = ({formik, apiLoading, cancel}) => {\n\n  const { values, submitForm , isValid, touched, dirty, isSubmitting, submitCount, handleSubmit, validateForm,\n    validateOnMount, validationSchema, setValues, resetForm, setSubmitting, errors, setTouched } = useFormikContext();\n\n\n\n  const submitHandler = async () => {\n    handleSubmit();\n    const formErrors = await validateForm();\n    const errorNames = Object.keys(formErrors);\n    if (errorNames.length > 0) {\n      const doc = document.querySelectorAll(`[name=\"${errorNames[0]}\"]`)[0];\n      doc?.focus();\n    }\n  };\n\n  const resetCurrentForm = () => {\n    resetForm({\n      values: {\n        author: '',\n        quote: ''\n      }\n    });\n  };\n\n  const cancelQuote = () => {\n    cancel();\n  };\n\n  return (\n    <React.Fragment>\n      <form onSubmit={ formik.onSubmit }>\n        <fieldset disabled={ apiLoading }>\n          \n          <div className=\"row\">\n            <div className=\"form-group col-3\">\n              <FormikTextInput label=\"Author\"\n                name=\"author\"\n                type=\"text\"\n                placeholder=\"Author\">\n              </FormikTextInput>\n            </div>\n          </div>\n            \n          <div className=\"row\">\n            <div className=\"form-group col-6\">\n              <FormikTextArea label=\"Quote\"\n                name=\"quote\"\n                type=\"text\"\n                placeholder=\"Cool quote\"\n                rows=\"5\">\n              </FormikTextArea>\n            </div>\n          </div>\n            \n          <div className='row justify-content-between'>\n            <div className=\"col-4\">\n              <button className=\"btn btn-success btn-sm mr-2\" onClick={ submitHandler } type=\"button\"\n                disabled={ apiLoading }>{ apiLoading ? 'Working...' : 'Submit' }</button>\n              <button type=\"button\" className=\"btn btn-info btn-sm\" onClick={ resetCurrentForm }>Reset</button>\n            </div>\n            <div className=\"col-1\">\n              <button type=\"button\" className=\"btn btn-danger btn-sm\" onClick={ cancelQuote }>Cancel</button>\n            </div>\n          </div>\n\n        </fieldset>\n      </form>\n      \n    </React.Fragment>\n  );\n\n};\n\nexport default QuoteForm;","/* eslint-disable no-unused-vars */\nimport React, { useEffect, useReducer, useState, useContext, useMemo } from 'react';\nimport classes from './NewQuote.module.scss';\nimport { useFormik, useFormikContext, Formik } from 'formik';\nimport { validationSchema } from './validation-schema';\nimport QuoteForm from \"./NewQuoteForm\";\nimport useSWR from 'swr';\nimport { axiosPost } from \"../../shared/rest/axios-rest\";\nimport { useNavigate, useLocation } from 'react-router-dom';\n\nexport const NewQuote = () => {\n  const navigate = useNavigate();\n  const location = useLocation();\n\n\n  const [isLoading, setIsLoading] = useState(false);\n\n  const initialValue = {\n    author: 'KQ',\n    quote: ''\n  };\n\n  const onSubmitHandler = (data) => {\n    setIsLoading(true);\n    let withDate = {\n      date: new Date().getTime(),\n      ...data\n    };\n    axiosPost('quote-list', withDate).then(\n      (res) => {\n        if (res.status === 200) {\n          setIsLoading(false);\n          navigate({\n            pathname: '/quotes',\n            search: location.search\n          });\n        }\n      }\n    ).catch((err) => {\n      console.log(err);\n    });\n\n  };\n\n  const onCancelQuote = () => {\n    navigate({\n      pathname: '/quotes',\n      search: location.search\n    });\n  };\n\n  return (\n    <div>\n      <div className=\"d-flex justify-content-center flex-row fs-19 poppins my-3\">\n        Add New Quote\n      </div>\n      <div>\n        <Formik\n          initialValues={ initialValue }\n          validationSchema= { validationSchema }\n          onSubmit= { onSubmitHandler }>\n          {\n            (formik) => {\n              return <QuoteForm formik={ formik } apiLoading={ isLoading } cancel={ onCancelQuote }></QuoteForm>;\n            }\n          }\n        </Formik>\n      </div>\n    </div>\n  );\n};\n\nexport default NewQuote;"],"names":["validationSchema","Yup","author","required","quote","min","formik","apiLoading","cancel","useFormikContext","handleSubmit","values","submitForm","isValid","touched","dirty","isSubmitting","submitCount","validateForm","resetForm","validateOnMount","setValues","submitHandler","setSubmitting","errors","setTouched","formErrors","errorNames","Object","keys","length","doc","document","querySelectorAll","focus","onSubmit","disabled","className","label","name","type","placeholder","rows","onClick","NewQuote","navigate","useNavigate","location","useLocation","useState","isLoading","setIsLoading","onCancelQuote","pathname","search","initialValues","data","withDate","date","Date","getTime","axiosPost","then","res","status","catch","err","console","log"],"sourceRoot":""}